import os
import json
import spacy
import uvicorn
from fastapi import FastAPI


def check_packages():
    try:
        nlps = {}
        nlps["de"] = spacy.load("de_core_news_sm")
        nlps["en"] = spacy.load("en_core_web_sm")


    except:
        os.system("python3 -m spacy download de_core_news_sm")
        os.system("python3 -m spacy download en_core_web_sm")


def read_tokens():
    '''reads in the tokens from a json-file generated by the java part

    '''
    file = open("jcasson.json")
    dic = json.load(file)

    return(dic["text"], dic["lang"])



def process():
    pass


if __name__ == '__main__':


    check_packages()

    text, lang = read_tokens()

    nlps = {}
    nlps["de"] = spacy.load("de_core_news_sm")
    nlps["en"] = spacy.load("en_core_web_sm")

    if lang in nlps:
        nlp = nlps[lang]
    else:
        nlp = nlps["en"]

    data = nlp(text)


    tokens = []
    sents = []
    pos = []
    deps = []
    ents = []

    for token in data:
        token_dict = {'idx': token.idx,
                    'length': len(token),
                    'is_space': token.is_space,
                    'token_text': token.text}
        tokens.append(token_dict)

    for sent in data.sents:
        sents_dict = {'begin': sent.start_char,
                      'end': sent.end_char}
        sents.append(sents_dict)

    app = FastAPI()


    @app.get("/")
    async def root():

        return tokens, sents


    uvicorn.run(app)
